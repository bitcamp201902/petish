<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.community.petish.community.report.mapper.ReportMapper">

<resultMap type="com.community.petish.community.report.domain.ReportVO" id="ReportVO">
	<result property="id" column="ID" />
	<result property="description" column="DESCRIPTION" />
	<result property="created_date" column="CREATED_DATE" />
	<result property="deleted" column="DELETED" />
	<result property="category_id" column="CATEGORY_ID" />
	<result property="board_id" column="BOARD_ID" />
	<result property="post_id" column="POST_ID" />
	<result property="user_id" column="USER_ID" />	
</resultMap>

<resultMap type="com.community.petish.community.report.dto.ReportResponseDTO" id="ResponseDTO">
	<result property="id" column="ID" />
	<result property="description" column="DESCRIPTION" />
	<result property="created_date" column="CREATED_DATE" />
	<result property="category_name" column="CATEGORY_NAME" />
	
	<result property="post_id" column="POST_ID" />
	<result property="board_id" column="BOARD_ID" />
	<result property="board_table_name" column="BOARD_TABLE_NAME" />
	<result property="board_table_ename" column="BOARD_TABLE_ENAME" />
	<result property="board_table_address" column="BOARD_TABLE_ADDRESS" />	
	<result property="user_id" column="USER_ID" />	
	<result property="nickname" column="NICKNAME" />
	<result property="deleted" column="DELETED" />
	
</resultMap>

<!-- 신고 작성 -->
<insert id="insertReport" parameterType="com.community.petish.community.report.dto.ReportRequestDTO">
	insert into report_post_tb
	values(
	((select NVL(max(id), 0) from REPORT_POST_TB) + 1),
	#{description, jdbcType=VARCHAR},
	sysdate, 0,
	#{category_id, jdbcType=INTEGER},
	#{board_id, jdbcType=INTEGER},
	#{post_id, jdbcType=INTEGER},
	#{user_id, jdbcType=INTEGER}	
	)
</insert>

<!-- 신고 삭제 -->
<update id="deleteReport" parameterType="Long">
	update report_post_tb
	set DELETE=1
	where ID=#{id}
</update>

<!-- 신고 리스트 -->
<select id="getReportList" resultMap="ResponseDTO">
	select p.ID, p.DESCRIPTION, p.CREATED_DATE, c.CATEGORY_NAME, b.BOARD_TABLE_NAME,b.BOARD_TABLE_ENAME, b.BOARD_TABLE_ADDRESS, p.POST_ID, u.NICKNAME,p.board_id
	from report_post_tb p, report_category_tb c, board_name_tb b, user_tb u
	where p.user_id = u.id and c.id=p.category_id and p.board_id = b.id order by p.created_date desc
</select>

<select id="getTableName" resultType="String">
	select board_table_ename from board_name_tb
</select>

<!-- 신고 리스트 -->
<select id="getBoardReportList" parameterType="Long" resultMap="ResponseDTO">
	select p.ID, p.DESCRIPTION, p.CREATED_DATE, c.CATEGORY_NAME, b.BOARD_TABLE_NAME, b.BOARD_TABLE_ADDRESS, p.POST_ID, u.NICKNAME,p.board_id,p.deleted 
	from report_post_tb p, report_category_tb c, board_name_tb b, user_tb u
	where p.user_id = u.id and c.id=p.category_id and p.board_id = b.id and p.post_id = #{post_id} and p.board_id= #{board_id}
</select>

<!-- 신고 조회 -->
<select id="getReport" resultMap="ResponseDTO">
	select p.ID, p.DESCRIPTION, p.CREATED_DATE, c.CATEGORY_NAME, b.BOARD_TABLE_NAME, p.POST_ID, u.NICKNAME 
	from report_post_tb p, report_category_tb c, board_name_tb b, user_tb u
	where DELETED=0
	order by id;
</select>

</mapper>